{"version":3,"sources":["TablePaginationActions.js","purchaseHistoryTheme.js","PurchaseHistory.js","cartTheme.js","cartGoodTheme.js","cartPaymentTheme.js","CartPaymentBox.js","CartSelectedGood.js","Cart.js","recieptTheme.js","Reciept.js","App.js","serviceWorker.js","index.js"],"names":["useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","style","container","display","flexDirection","margin","h1","padding","table","minWidth","boxShadow","border","borderRadius","background","status","date","fontWeight","row","height","PurchaseHistory","handleChangePage","newPage","setState","state","handleChangeRowsPerPage","parseInt","target","value","loading","data","this","fetch","then","res","json","rows","field","item","cell","includes","TableCell","Typography","variant","name","type","time","cellContent","Array","isArray","paymentStatus","status__reciept","status__result","schema","slice","map","d","i","TableRow","key","renderCell","emptyRows","min","length","component","Table","TableHead","TableBody","renderRows","colSpan","TableFooter","TablePagination","align","rowsPerPageOptions","SelectProps","inputProps","native","onChangeRowsPerPage","ActionsComponent","React","Component","withStyles","cart","paddingLeft","alignItems","alignSelf","cartElement__name","cartElement","justifyContent","cartElement__about","flexFlow","width","boxSizing","paddingBottom","marginTop","borderBottom","marginBottom","order","button","payment","textAlign","position","top","form","marginRight","CartPaymentBox","totalPrices","total","Paper","price","noValidate","TextField","label","Button","CartSelectedGood","renderText","text","title","eventType","src","imgsrc","alt","totalPrice","selectedGoods","good","reduce","a","v","Number","console","log","e","Cart","reciept__head","reciept","tableItem","Reciept","company","recieptTotal","customer","renderTable","companyKeys","Object","keys","customerKeys","k","companyName","s","values","el","convertToPDF","window","html2canvas","doc","jsPDF","source","document","querySelectorAll","scale","canvas","x","toDataURL","addImage","save","r","recieptPrices","recieptQuantity","quantity","recieptAmounts","p","q","amount","App","to","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1d14b14.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n  }));\r\n  \r\n  \r\n  function TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n  \r\n    const handleFirstPageButtonClick = event => {\r\n      onChangePage(event, 0);\r\n    };\r\n  \r\n    const handleBackButtonClick = event => {\r\n      onChangePage(event, page - 1);\r\n    };\r\n  \r\n    const handleNextButtonClick = event => {\r\n      onChangePage(event, page + 1);\r\n    };\r\n  \r\n    const handleLastPageButtonClick = event => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default TablePaginationActions","const style = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '0 100px',\r\n    },\r\n    h1:{\r\n        padding:'30px'\r\n    },\r\n\r\n    table:{  \r\n        minWidth: 500,\r\n        boxShadow: '0px 3px 6px #00000029',\r\n        border: '1px solid #7070702E',\r\n        borderRadius: '5px',\r\n        background: '#FFF',\r\n\r\n    },\r\n    status:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    date :{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        '& .date__date':{\r\n            fontWeight: 'bold'\r\n        },\r\n\r\n    },\r\n    event:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        \r\n    },\r\n    row:{\r\n        height:'107px',\r\n\r\n        '& td:nth-child(1)':{\r\n            padding: '0 0 0 32px'\r\n        }\r\n\r\n    },\r\n    \r\n}\r\nexport default style","import React from 'react'\r\n\r\n// material-ui components and methods\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableFooter from '@material-ui/core/TableFooter'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// react components\r\nimport TablePaginationActions from './TablePaginationActions'\r\n\r\n// styles theme\r\nimport style from './purchaseHistoryTheme.js'\r\n\r\n\r\nclass PurchaseHistory extends React.Component {\r\n  \r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    this.state={\r\n      page: 0,\r\n      rowsPerPage: 5,\r\n      loading: false,\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.setState((state)=>{\r\n      return {...state, loading: true }\r\n    })\r\n\r\n    fetch('data.json')\r\n            .then(res=>res.json())\r\n            .then((data)=>{\r\n              this.setState((state)=>{\r\n                return {...state, data: data.rows, loading: false }\r\n              })\r\n            })\r\n  }\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({...this.state, page: newPage})\r\n\r\n  }\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({...this.state, rowsPerPage: parseInt(event.target.value)})\r\n  }\r\n\r\n  renderCell(field, item){\r\n    const { classes } = this.props\r\n\r\n    const simpleValues = [ 'quantity', 'totalPrice', 'paymentType' ]\r\n    let cell = null\r\n\r\n    if (simpleValues.includes(field)){\r\n        cell = <TableCell>{item[field]}</TableCell>\r\n    } else{\r\n      switch(field){\r\n        case 'event':\r\n            cell = <TableCell>\r\n              <div className={classes.event}>\r\n              <Typography variant=\"h6\" className=\"event__name\">{item.event.name}</Typography>\r\n              <span className=\"event__type\">{item.event.type}</span>\r\n              </div>\r\n              </TableCell>\r\n        break\r\n        \r\n        case 'date':\r\n            cell = <TableCell>\r\n            <div className={classes.date}>\r\n              <span className=\"date__time\">{item.date.time}</span>\r\n              <span className=\"date__date\">{item.date.date}</span>\r\n            </div>\r\n          </TableCell>\r\n        break\r\n\r\n        case 'paymentStatus':\r\n\r\n            let cellContent = Array.isArray(item.paymentStatus) ? \r\n                <div className={classes.status}>\r\n                  <span className={classes.status__reciept}>{ item.paymentStatus[1] }</span>\r\n                  <span className={classes.status__result}>{ item.paymentStatus[0] }</span>\r\n                </div>\r\n                :\r\n                item.paymentStatus\r\n\r\n            cell = <TableCell>{cellContent}</TableCell>\r\n        break\r\n\r\n        default: cell = null\r\n\r\n      }\r\n    }\r\n\r\n    return cell\r\n  }\r\n\r\n  renderRows(data, rowsPerPage, page) {\r\n\r\n    const schema = ['event', 'date', 'quantity', 'totalPrice', 'paymentType', 'paymentStatus']\r\n    const { classes } = this.props\r\n\r\n    return data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((d, i) => \r\n      (\r\n        <TableRow className={classes.row} key = {i}>\r\n          {schema.map(field => { return this.renderCell(field, d)})}\r\n        </TableRow>\r\n      ))\r\n  }\r\n  render(){\r\n    const {page, data} = this.state\r\n    let {rowsPerPage} = this.state\r\n    const { classes } = this.props\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage)\r\n    return(\r\n          // <Paper>\r\n           <div className={classes.container}>\r\n            <Typography variant=\"h4\" component=\"h1\" className={classes.h1} >Purchase history</Typography>\r\n              <Table className={classes.table}>                \r\n                <TableHead>\r\n                  <TableRow className={classes.row}>\r\n                  {['Event','Date', 'Quantity', 'Total price', 'Payment type', 'Payment status'].map(i=><TableCell>{i}</TableCell>)}\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {this.renderRows(data, rowsPerPage, page)}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow className={classes.row} style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n\r\n                <TableFooter> \r\n                  <TableRow  colSpan={6}>\r\n                  <TablePagination\r\n                    align=\"right\"\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    count={data.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                      inputProps: { 'aria-label': 'rows per page' },\r\n                      native: true,\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                  />\r\n                  </TableRow>\r\n                </TableFooter>\r\n              </Table>\r\n            </div>\r\n          // </Paper>\r\n\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n  export default withStyles(style)(PurchaseHistory)","const style = {\r\n    container:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '0 100px',\r\n    },\r\n}\r\n\r\nexport default style","const style = {\r\n    cart:{\r\n        background:\"#fff\",\r\n        paddingLeft:\"70px\",\r\n\r\n        '& .cartSystem':{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            '& .header':{\r\n                margin:\"30px 0\",\r\n                alignSelf: \"flex-start\",\r\n            },\r\n        },\r\n    },\r\n    cartElement__name:{\r\n        margin:\"30px 0\",\r\n\r\n    },\r\n    cartElement:{\r\n        display: \"flex\",\r\n        justifyContent:\"space-between\",\r\n    },\r\n    cartElement__about:{\r\n        display:\"flex\",\r\n        flexFlow: \"column wrap\",\r\n        height:'225px',\r\n        width: \"686px\",\r\n        boxSizing: \"border-box\",\r\n        paddingBottom: \"50px\",\r\n        marginTop: \"30px\",\r\n        '&:nth-child(even)':{\r\n            borderBottom: \"1px solid #707070\",\r\n        },\r\n        '& .item':{\r\n            marginBottom: '10px',\r\n            marginLeft: '30px'\r\n        },\r\n        '& .about__title':{\r\n            order:2,\r\n            width: \"50%\"\r\n        },\r\n\r\n        '& .about__eventType':{\r\n            order:2\r\n        },\r\n\r\n        '& .about__imgsrc':{\r\n            width: \"263px\",\r\n            height: \"148px\",\r\n            order:1\r\n        },\r\n\r\n        '& .about__time':{\r\n            order:2\r\n\r\n        },\r\n\r\n        '& .about__pricePerHour':{\r\n            order:2,\r\n            \r\n\r\n        },\r\n\r\n        '& .about__totalPrice':{\r\n            order:3,\r\n            marginTop: \"118px\",\r\n            marginLeft: '-100px'\r\n            \r\n        }\r\n    },\r\n    button:{\r\n        width: \"80vw\",\r\n        height: \"118px\",\r\n        marginBottom: \"30px\",\r\n    },\r\n}\r\n\r\nexport default style","const style = {\r\n    payment:{\r\n        border: \"1px solid #70707047\",\r\n        borderRadius: \"5px\",\r\n        background:'#FAFAFA 0% 0% no-repeat padding-box',\r\n        width: \"500px\",\r\n        height: \"600px\",\r\n        margin: \"0 30px\",\r\n        '& .items':{\r\n            margin: \"30px 70px 50px 60px\",\r\n            '& .payment_header':{\r\n                marginBottom: \"50px\",\r\n            },\r\n\r\n            '& .payment_total':{\r\n                textAlign: \"end\",\r\n                position: \"relative\",\r\n                top: \"-31px\"\r\n            }\r\n        },\r\n        \"& .btn-grp\":{\r\n            marginTop: \"93px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n        \r\n        },\r\n    },\r\n\r\n    form:{  \r\n        display:\"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\", \r\n        \"& .form__cardname, .form__cardnum\":{\r\n            width: \"348px\",\r\n        },\r\n        \"& .form__cardname\":{\r\n            margin:\"8px 0\"\r\n        },\r\n        \"& .form__cardexp\":{\r\n            width: \"196px\",\r\n            marginRight: \"40px\",\r\n            margin:\"8px 0\"\r\n        },   \r\n        \"& .form__cardcvv\":{\r\n            width: \"112px\",\r\n            margin:\"8px 0\"\r\n        },\r\n    },\r\n    button:{\r\n        width: \"220px\"\r\n\r\n    },\r\n}\r\nexport default style","import React from 'react' \r\n\r\nimport style from './cartPaymentTheme.js'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\n\r\nclass CartPaymentBox extends React.Component {\r\n    \r\n\r\n    render(){\r\n        const { classes, totalPrices, total } = this.props\r\n        return(\r\n            <Paper className={classes.payment}>\r\n                <div className=\"items\">\r\n                    <Typography variant=\"h6\" className=\"payment_header\">Details</Typography>\r\n                    {\r\n                        totalPrices.map((price,i)=>{                            \r\n                            return <Typography variant=\"h5\" className=\"payment_item\">Item {i+1}: {price} $</Typography>\r\n                        })\r\n                    }\r\n                    <Typography variant=\"h5\" className=\"payment_total\">Total: {total} $</Typography>\r\n\r\n                </div>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        className={\"form__cardname\"}\r\n                        label=\"card name\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        className={\"form__cardnum\"}\r\n                        label=\"card number\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <div className=\"card__data\">\r\n                        <TextField\r\n                            className={\"form__cardexp\"}\r\n                            label=\"mm/yy\"\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            className={\"form__cardcvv\"}\r\n                            label=\"cvv\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <div className=\"btn-grp\">\r\n                    <Button variant=\"outlined\" className={classes.button}>cancel</Button>\r\n                    <Button variant=\"outlined\" className={classes.button}>pay</Button>    \r\n                </div>    \r\n\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(CartPaymentBox)","import React from 'react' \r\n\r\nimport style from './cartGoodTheme.js'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CartPaymentBox from './CartPaymentBox'\r\n\r\nclass CartSelectedGood extends React.Component {\r\n\r\n    state = {\r\n        data:[],\r\n        totalPrices:[],\r\n        total:0\r\n    }\r\n    componentWillMount(){\r\n        this.setState((state)=>{\r\n            return {...state, loading: true }\r\n          })\r\n      \r\n          fetch('cartdata.json')\r\n                  .then(res=>res.json())\r\n                  .then((data)=>{\r\n                    this.setState((state)=>{\r\n                        let totalPrices = data.selectedGoods.map(good=>good.totalPrice),\r\n                            total = totalPrices.reduce((a,v)=>Number(a)+Number(v))\r\n                            console.log(total)\r\n                        \r\n                        return {...state, data: data.selectedGoods, totalPrices, total, loading: false }\r\n                    })\r\n                  })\r\n        \r\n    }\r\n    renderText = (field, item) =>{\r\n        \r\n            let simpleText = [\"time\", \"pricePerHour\"],\r\n                text = null\r\n            if (simpleText.includes(field)){\r\n                text = <Typography className={`about__${field} item`} variant={\"subtitle1\"}>{item[field]}</Typography>\r\n            } else {  \r\n            switch(field){\r\n         \r\n                case \"title\":\r\n                    text = <Typography className={`about__${field}  item`} variant={\"h5\"}>{item.title}</Typography>\r\n                    break\r\n         \r\n                case \"eventType\":\r\n                    text =   <Typography   className={`about__${field}  item`} variant={\"h6\"}>{item.eventType}</Typography>\r\n                    break\r\n                \r\n                case \"imgsrc\":    \r\n                    text = <img src={item.imgsrc} className=\"about__imgsrc\" alt=\"cart_img\"/>  \r\n                    break \r\n\r\n                case \"totalPrice\": \r\n                    text = <Typography className={`about__totalPrice`} align={\"rigth\"} display='inline' variant={\"h6\"}>{`Total: ${item.totalPrice}$`}</Typography>\r\n                    break \r\n\r\n                default: text = null    \r\n            }\r\n        }\r\n        return text\r\n    }\r\n         \r\n\r\n    render(){\r\n        const { classes } = this.props\r\n        const { data } = this.state\r\n        const schema = [\"imgsrc\", \"title\", \"eventType\", \"time\", \"pricePerHour\", \"totalPrice\"]\r\n\r\n        return(\r\n            <div className={classes.cart}>       \r\n                <div className={classes.cartElement}>\r\n                    <div className=\"cartElement__card\">\r\n                    <Typography className={classes.cartElement__name} variant={\"h3\"}>Cart</Typography>     \r\n                        \r\n                        {\r\n                            data.map( (d) => \r\n                            <div className={classes.cartElement__about}>{schema.map(e=>{return this.renderText(e, d)})}</div> \r\n                            )\r\n                        }\r\n                    </div>     \r\n\r\n                    <CartPaymentBox totalPrices={this.state.totalPrices} total = {this.state.total}/>\r\n                </div>\r\n                <div className=\"cartSystem\">    \r\n                        <Typography variant=\"h3\" className=\"header\">Payment systems</Typography>\r\n                        <Button variant=\"outlined\" className={classes.button}>First payment system</Button>\r\n                        <Button variant=\"outlined\" className={classes.button}>Second payment system</Button>\r\n                </div>\r\n            </div>\r\n)\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(CartSelectedGood)","import React from 'react' \r\n\r\nimport style from './cartTheme.js'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport CartSelectedGood from './CartSelectedGood'\r\n\r\n\r\n\r\nclass Cart extends React.Component {\r\n\r\n    state={\r\n        selectedGoods:[]\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <CartSelectedGood/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Cart)","const style = {\r\n    reciept__head:{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        margin: \"30px 115px\",\r\n    },\r\n    reciept:{\r\n        display:\"flex\",\r\n        padding:\"0 115px\",\r\n        background: \"#fff\",\r\n        flexDirection: \"column\",\r\n        '& .reciept__body':{\r\n            borderBottom: \"1px solid #707070\",\r\n            display:\"flex\",\r\n            justifyContent: \"space-between\",\r\n            '& .customer':{\r\n            \r\n            },\r\n            '& .company':{\r\n            \r\n            },\r\n        },\r\n               \r\n        '& .reciept__table':{\r\n            '& .table__header':{\r\n                display: \"flex\",\r\n                borderBottom: \"1px solid #707070\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"0 256px 0 30px\",\r\n            },\r\n            '& .table__body':{\r\n                '& .body__element':{\r\n                    width: \"80%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    margin: \"0 0 0 30px\",\r\n                    borderBottom: \"1px solid #707070\",\r\n                },\r\n                '& .body__total':{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    width: \"80%\",\r\n                    '& .totalAmount':{\r\n                        '&:nth-child(1)':{\r\n                            marginRight:\"160px\",\r\n                        }\r\n                    },\r\n                },\r\n            }\r\n        },\r\n        \r\n    },\r\n    tableItem:{\r\n        '&:nth-child(1)':{\r\n            width: \"180px\"\r\n        },\r\n        '&:nth-child(2)':{\r\n            width: \"105px\"\r\n        },\r\n        '&:nth-child(3)':{\r\n            width: \"75px\"\r\n        },\r\n        '&:nth-child(4)':{\r\n            width: \"50px\"\r\n        },\r\n        '&:nth-child(5)':{\r\n            width: \"75px\"\r\n        },\r\n    },\r\n    \r\n\r\n}\r\nexport default style\r\n","import React from 'react' \r\n\r\nimport * as jsPDF from 'jspdf'\r\nimport html2canvas from \"html2canvas\"\r\n\r\nimport style from './recieptTheme.js'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass Reciept extends React.Component {\r\n\r\n    state = {\r\n        company:{},\r\n        reciept:{\r\n            data:[],\r\n            recieptTotal: 0,    \r\n        },\r\n        customer:{},\r\n        schema: [],\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState((state)=>{\r\n            return {...state, loading: true }\r\n          })\r\n      \r\n          fetch('recieptdata.json')\r\n                  .then(res=>res.json())\r\n                  .then((data)=>{\r\n                    this.setState((state)=>{ \r\n                        let schema = data.reciept.data.map((r)=>Object.keys(r))[0]\r\n                        let recieptPrices = data.reciept.data.map(r=>r.price)\r\n                        let recieptQuantity = data.reciept.data.map(r=>r.quantity)\r\n                        let amount = state.recieptAmounts\r\n                        let recieptTotal = state.recieptTotal\r\n                        \r\n                        amount = recieptPrices.map(p=>recieptQuantity.map(q=>p*q))[0]\r\n                        recieptTotal = amount.reduce((a,v)=>a+v)\r\n                        let reciept =  data.reciept \r\n                        reciept = reciept.data.map(p => ({ ...p, amount: p.quantity*p.price}))                 \r\n                        reciept = {...reciept, recieptTotal}\r\n                        console.log(reciept)\r\n                        return {...state, company: data.company, customer: data.customer, reciept, schema, loading: false }\r\n                    })\r\n                  })    \r\n        \r\n    }\r\n    renderTable = () => {\r\n        const {classes} = this.props\r\n        const { company, customer, reciept, schema } = this.state\r\n        const companyKeys = Object.keys(company)\r\n        const customerKeys = Object.keys(customer)\r\n\r\n        return <div className={`${classes.reciept} reciept`}>\r\n        <div className=\"reciept__body\">\r\n\r\n            <div className=\"company\">\r\n            {\r\n                companyKeys.map(k=>{\r\n                    let div = null\r\n                    if (k === 'companyName') {\r\n                        div = <Typography variant=\"h3\">{company.companyName}</Typography>\r\n                    }else{\r\n                        div = <Typography variant=\"h6\">{company[k]}</Typography>\r\n                    }\r\n                    return div\r\n                })                \r\n                \r\n            }\r\n\r\n            </div>\r\n\r\n            <div className=\"customer\">\r\n\r\n                {\r\n                    customerKeys.map(k=>{\r\n                        let div = <div className=\"customerInfo\"> \r\n                            <Typography variant=\"h4\">{k}</Typography>\r\n                            <Typography variant=\"h6\">{customer[k]}</Typography>\r\n                        </div>\r\n                        return div\r\n                    })\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"reciept__table\">\r\n\r\n            <div className=\"table__header\">\r\n                {\r\n                    schema.map(s=><Typography className={classes.tableItem} variant=\"h6\">{s}</Typography>)\r\n                }\r\n                <Typography className={classes.tableItem} variant=\"h6\">amount</Typography>\r\n            </div>\r\n            <div className=\"table__body\">\r\n                \r\n                    {\r\n                        Object.keys(reciept)\r\n                        .map(e=>\r\n                            typeof(reciept[e])==='object'?\r\n                                Object.values(reciept[e])\r\n                            : \r\n                                reciept[e]\r\n                            )\r\n                        .map(el=>\r\n                            typeof(el) === 'object'?\r\n                                <div className=\"body__element\">\r\n                                    {el.map((e)=><Typography className={classes.tableItem} variant=\"h6\">{e}</Typography>)}\r\n                                </div>\r\n                            :<div className=\"body__total\">   \r\n                                <Typography className=\"totalAmount\" variant=\"h6\">Total:</Typography>\r\n                                <Typography className=\"totalAmount\" variant=\"h6\">{el} $</Typography>\r\n                            </div>\r\n                            )\r\n                                        \r\n                    } \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    }\r\n    convertToPDF = (e) => {\r\n        window.html2canvas = html2canvas;\r\n        let doc = new jsPDF(\"l\", \"px\", \"a2\")\r\n        const source = document.querySelectorAll('.reciept')[0]\r\n        html2canvas(source, { scale: 2 })\r\n            .then(canvas => {\r\n                var x = canvas.toDataURL(\"image/jpeg\", 0.95)\r\n                doc.addImage(x, \"JPEG\", 0, 50, 1200, 350 )\r\n                doc.save(\"body.pdf\")\r\n          });\r\n    }  \r\n\r\n    render(){\r\n        const {classes} = this.props\r\n              \r\n        return(\r\n            <div>\r\n                <div className={`${classes.reciept__head} reciept__head`}>\r\n                    <Typography variant=\"h4\">Reciept</Typography>\r\n                    <Button variant=\"outlined\" className={classes.button} onClick={this.convertToPDF}>download pdf</Button>\r\n                </div>\r\n\r\n                {this.renderTable()}\r\n                \r\n            </div>       \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Reciept)\r\n","import React from 'react';\r\nimport { Route } from 'react-router'\r\nimport { HashRouter, Link } from 'react-router-dom'\r\nimport './App.css';\r\n\r\nimport PurchaseHistory from'./PurchaseHistory'\r\nimport Cart from'./Cart'\r\nimport Reciept from \"./Reciept\"\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  \r\n  render(){\r\n    return <div  className=\"App\"> \r\n            <HashRouter> \r\n              <ul>\r\n                <li><Link to='/history'>History Screen</Link></li>\r\n                <li><Link to='/reciept'>Reciept Screen</Link></li>\r\n                <li><Link to='/cart'>Cart Screen</Link></li>\r\n              </ul>\r\n              \r\n              \r\n\r\n              <Route path='/history' component={PurchaseHistory}/>\r\n              <Route path='/reciept' component={Reciept}/>\r\n              <Route path='/cart' component={Cart} />\r\n            </HashRouter>\r\n           </div>\r\n  \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}